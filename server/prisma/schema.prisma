// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Service {
  id        Int       @id @default(autoincrement())
  name      String
  owner     User      @relation("ServiceOwner", fields: [ownerId], references: [id])
  ownerId   Int       @unique
  companies Company[]
  employees User[]    @relation("ServiceEmployees")
}

//**********************************************************************************************************************

// FIRME

model Company {
  id              Int              @id @default(autoincrement())
  name            String?
  adresa          String?
  sjedisteId      Int?
  sjediste        Gradovi?         @relation(fields: [sjedisteId], references: [id]) // provjeriti ovo
  drzavaId        Int?
  drzava          Drzave?          @relation(fields: [drzavaId], references: [id])
  PDVbroj         String? // jedinstven
  IDbroj          String? // jedinstven
  valuta          String?
  djelatnostId    Int?
  djelatnost      Djelatnost?      @relation(fields: [djelatnostId], references: [id])
  obveznikPDV     Boolean?
  telefon         String?
  fax             String?
  email           String?
  web             String?
  racun           Racun[]          @relation("Racun") // ide referenca
  service         Service          @relation(fields: [serviceId], references: [id])
  serviceId       Int
  workers         User[]           @relation("CompanyWorkers")
  kupciDobavljaci KupacDobavljac[]
  poslovnice      Poslovnice[]
  skladista       Skladiste[]
  knjige          Knjige[]
  dokumenti       Dokumenti[]
  SjedisteFirme   SjedisteFirme?   @relation(fields: [sjedisteFirmeId], references: [id])
  sjedisteFirmeId Int?
}

model KupacDobavljac {
  id              Int            @id @default(autoincrement())
  name            String?
  adresa          String?
  sjedisteId      Int?
  sjediste        Gradovi?       @relation(fields: [sjedisteId], references: [id])
  drzavaId        Int?
  drzava          Drzave?        @relation(fields: [drzavaId], references: [id])
  PDVbroj         String?
  IDbroj          String?
  valuta          String?
  djelatnostId    Int?
  djelatnost      Djelatnost?    @relation(fields: [djelatnostId], references: [id])
  obveznikPDV     Boolean?
  telefon         String?
  fax             String?
  email           String?
  web             String?
  racun           Racun[]
  kupac           Boolean?
  dobavljac       Boolean?
  companyId       Int
  company         Company        @relation(fields: [companyId], references: [id])
  SjedisteFirme   SjedisteFirme? @relation(fields: [sjedisteFirmeId], references: [id])
  sjedisteFirmeId Int?
  Dokumenti       Dokumenti[]
}

model Poslovnice {
  id              Int            @id @default(autoincrement())
  naziv           String?
  adresa          String?
  IDbroj          String?
  sjedisteId      Int?
  sjediste        Gradovi?       @relation(fields: [sjedisteId], references: [id])
  racun           Racun[]
  companyId       Int
  company         Company        @relation(fields: [companyId], references: [id])
  skladista       Skladiste[]
  dokumenti       Dokumenti[]
  SjedisteFirme   SjedisteFirme? @relation(fields: [sjedisteFirmeId], references: [id])
  sjedisteFirmeId Int?
}

model Skladiste {
  id    Int     @id @default(autoincrement())
  naziv String?
  sifra String?

  poslovnicaId Int?
  poslovnica   Poslovnice? @relation(fields: [poslovnicaId], references: [id])

  companyId Int?
  company   Company? @relation(fields: [companyId], references: [id])

  skladisteArtikli SkladisteArtikli[]
  izTransferi      Transferi[]        @relation("IzSkladista")
  uTransferi       Transferi[]        @relation("USkladista")
  dokumenti        Dokumenti[]
  VrstaSkladista   VrstaSkladista?    @relation(fields: [vrstaSkladistaId], references: [id])
  vrstaSkladistaId Int?
}

model VrstaSkladista {
  id        Int         @id @default(autoincrement())
  naziv     String
  skladiste Skladiste[]
}

model Artikli {
  id               Int                @id @default(autoincrement())
  naziv            String
  sifra            String             @unique
  jedinicaMjere    String
  skladisteArtikli SkladisteArtikli[]
  transfer         Transferi[]
  Godine           Godine?            @relation(fields: [godineId], references: [id])
  godineId         Int?

  dokumenti     Dokumenti[]     @relation("ArtikliDokumenti")
  ArtikliCijene ArtikliCijene[]
}

model ArtikliCijene {
  id        Int      @id @default(autoincrement())
  artikliId Int?
  artikli   Artikli? @relation(fields: [artikliId], references: [id])
  cijena    Decimal  @db.Decimal(10, 2)
  mpcijena  Decimal? @db.Decimal(10, 2)
  datum     DateTime @default(now())

  @@index([artikliId, datum])
}

model SkladisteArtikli {
  id          Int        @id @default(autoincrement())
  skladisteId Int?
  skladiste   Skladiste? @relation(fields: [skladisteId], references: [id])
  artikliId   Int?
  artikli     Artikli?   @relation(fields: [artikliId], references: [id])
  kolicina    Decimal    @db.Decimal(10, 2)
  Godine      Godine?    @relation(fields: [godineId], references: [id])
  godineId    Int?

  @@unique([skladisteId, artikliId])
}

model Transferi {
  id             Int       @id @default(autoincrement())
  artikliId      Int
  artikli        Artikli   @relation(fields: [artikliId], references: [id])
  izSkladisteId  Int
  izskladiste    Skladiste @relation("IzSkladista", fields: [izSkladisteId], references: [id])
  uSkladisteId   Int
  uSkladiste     Skladiste @relation("USkladista", fields: [uSkladisteId], references: [id])
  kolicina       Decimal   @db.Decimal(10, 2)
  datumTransfera DateTime  @default(now())
}

// *********************************************************************************************************************
// POMOCNE TABELE

model Gradovi {
  id             Int              @id @default(autoincrement())
  naziv          String
  postanski_broj Int
  company        Company[]
  kupacDobavljac KupacDobavljac[]
  poslovnice     Poslovnice[]
}

model Drzave {
  id             Int              @id @default(autoincrement())
  naziv          String
  company        Company[]
  kupacDobavljac KupacDobavljac[]
}

model Racun {
  id        Int     @id @default(autoincrement())
  nazivId   Int
  banka     Banke   @relation(fields: [nazivId], references: [id])
  br_racuna String
  devizni   Boolean

  companyId Int
  company   Company @relation("Racun", fields: [companyId], references: [id])

  kupacDobavljacID Int
  kupacDobavljac   KupacDobavljac @relation(fields: [kupacDobavljacID], references: [id])

  poslovnicaID Int
  poslovnica   Poslovnice @relation(fields: [poslovnicaID], references: [id])
}

model Banke {
  id    Int    @id @default(autoincrement())
  naziv String

  racun Racun[]
}

model Djelatnost {
  id             Int              @id @default(autoincrement())
  naziv          String
  sifra          Decimal          @db.Decimal(10, 2)
  company        Company[]
  kupacDobavljac KupacDobavljac[]
}

// Tabele koje sluze za izlistavanje

model Godine {
  id     Int     @id @default(autoincrement())
  naziv  Int     @unique
  status Boolean

  skladisteArtikli SkladisteArtikli[]
  artikli          Artikli[]
  dokumenti        Dokumenti[]
  knjige           Knjige[]
}

model SjedisteFirme {
  id    Int    @id @default(autoincrement())
  naziv String

  companies      Company[]
  kupacDobavljac KupacDobavljac[]
  poslovnice     Poslovnice[]
}

// Knjige i dokumenti

model Dokumenti {
  id                        Int             @id @default(autoincrement())
  naziv                     String
  datumIzdavanjaDokumenta   DateTime
  datumKreiranjaKalkulacije DateTime
  Godine                    Godine?         @relation(fields: [godineId], references: [id])
  godineId                  Int?
  Company                   Company?        @relation(fields: [companyId], references: [id])
  companyId                 Int?
  Poslovnice                Poslovnice?     @relation(fields: [poslovniceId], references: [id])
  poslovniceId              Int?
  Skladiste                 Skladiste?      @relation(fields: [skladisteId], references: [id])
  skladisteId               Int?
  VrstaDokumenta            VrstaDokumenta? @relation(fields: [vrstaDokumentaId], references: [id])
  vrstaDokumentaId          Int?
  redniBroj                 Int
  Knjige                    Knjige?         @relation(fields: [knjigeId], references: [id])
  knjigeId                  Int?
  artikli                   Artikli[]       @relation("ArtikliDokumenti")
  kupacDobavljacId          Int?
  kupacDobavljac            KupacDobavljac? @relation(fields: [kupacDobavljacId], references: [id])
  PDV                       PDV?            @relation(fields: [pDVId], references: [id])
  pDVId                     Int?
  Valuta                    Valuta?         @relation(fields: [valutaId], references: [id])
  valutaId                  Int?

  @@unique([redniBroj])
}

model Valuta {
  id        Int         @id @default(autoincrement())
  naziv     String
  dokumenti Dokumenti[]
}

model PDV {
  id        Int         @id @default(autoincrement())
  stopaPDV  Int
  Aktivan   Boolean
  dokumenti Dokumenti[]
}

model Knjige {
  id        Int         @id @default(autoincrement())
  naziv     String
  Godine    Godine?     @relation(fields: [godineId], references: [id])
  godineId  Int?
  Company   Company?    @relation(fields: [companyId], references: [id])
  companyId Int?
  dokumenti Dokumenti[]
}

model VrstaDokumenta {
  id        Int         @id @default(autoincrement())
  naziv     String      @unique
  dokumenti Dokumenti[]
}

// *********************************************************************************************************************

// KORISNICI

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  password     String
  username     String
  roleId       Int
  role         Role      @relation(fields: [roleId], references: [id])
  ownedService Service?  @relation("ServiceOwner")
  service      Service?  @relation("ServiceEmployees", fields: [serviceId], references: [id])
  serviceId    Int?
  companies    Company[] @relation("CompanyWorkers")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  permissions String[] @default([])
  users       User[]
}
